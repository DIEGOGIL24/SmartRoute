services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    networks:
      - network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smartroute
    volumes:
      - smartRouteData:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - network

  backend:
    build: ./backend
    environment:
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672/
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/smartroute
    depends_on:
      - rabbitmq
      - postgres
      - traefik
    networks:
      - network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  # frontend:
  #   build: ./frontend
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.frontend.rule=Host(`localhost`)"
  #     - "traefik.http.routers.frontend.entrypoints=web"
  #     - "traefik.http.services.frontend.loadbalancer.server.port=3000"
  #   networks:
  #     - network
  #   depends_on:
  #     - backend

  ollama:
    image: ollama/ollama
    container_name: ollamaSmartRoute
    restart: unless-stopped
    networks:
      - network
    volumes:
      - ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama.rule=Host(`ollama.localhost`)"
      - "traefik.http.routers.ollama.entrypoints=web"
      - "traefik.http.services.ollama.loadbalancer.server.port=11434"

volumes:
  smartRouteData:
  ollama:

networks:
  network:
    driver: bridge